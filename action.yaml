name: 'docfx for GitHub Pages'
description: 'Deploy beautiful API reference to GitHub Pages with only 1 action. No unnecessary file upload and complicated `docfx` setup.'
author: '@sator-imaging'

# Ref: https://haya14busa.github.io/github-action-brandings/
branding:
  icon: 'upload-cloud'
  color: 'yellow'


inputs:

  # required options
  app_name:
    description: |
      Text shown next to header logo.
      Default 'docfx-pages'
    default:  'docfx-pages'
    required: true

  site_title:
    description: |
      Website title used as suffix for HTML pages. ex) "HTML Page Title | <site title>"
      Default 'docfx for GitHub Pages'
    default:  'docfx for GitHub Pages'
    required: true

  site_footer:
    description: |
      Footer text for generated pages. HTML accepted.
      Default '&copy; 2023 Sator Imaging'
    default:  '&copy; 2023 Sator Imaging'
    required: true

  # optional
  class_members:
    description: |
      Generate all-in-one class api document or separate each member into pages.
      Accepts one of: 'separatePages' | 'samePage'
      Default 'samePage'
    default:  'samePage'

  site_logo:
    description: |
      Website logo file path. Accepts full-qualified URI or relative path to '.docfx' folder.
      Default 'images/wikimedia-commons/logo-csharp-recolor.svg'
    default:  'images/wikimedia-commons/logo-csharp-recolor.svg'

  site_favicon:
    description: |
      Favicon file path. Accepts full-qualified URI or relative path to '.docfx' folder.
      Default 'images/wikimedia-commons/logo-csharp-recolor.svg'
    default:  'images/wikimedia-commons/logo-csharp-recolor.svg'

  google_analytics:
    description: |
      Google Analytics ID. Leave empty to disable this feature.
      Default ''
    default:  ''

  # customize main.js/css, see docfx reference for detail
  # https://dotnet.github.io/docfx/docs/template.html?tabs=modern#custom-template
  # note that these are added after builtin settings
  main_js:
    description: |
      Default ''
    default:  ''

  main_css:
    description: |
      Default ''
    default:  ''


outputs:
  page_url:
    description: 'URL to deployed GitHub Pages'
    value: ${{ steps.deployment.outputs.page_url }}


runs:
  using: "composite"
  steps:

    # do not checkout caller's repository.
    # it should be controlled by caller.

    - name: DEBUG
      shell: bash
      run: |
        echo "github.ref: ${{ github.ref }}"
        echo "github.action_ref: ${{ github.action_ref }}"
        echo "github.workflow_ref: ${{ github.workflow_ref }}"
        echo "github.base_ref: ${{ github.base_ref }}"
        echo "github.head_ref: ${{ github.head_ref }}"
        echo "GITHUB_REF : ${GITHUB_REF}"
        echo "GITHUB_ACTION_REPOSITORY: ${GITHUB_ACTION_REPOSITORY}"
        echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
        echo "GITHUB_ACTION_PATH: ${GITHUB_ACTION_PATH}"
        echo "GITHUB_ACTION_PATH##*/: ${GITHUB_ACTION_PATH##*/}"

    - name: Set env variables
      shell: bash
      run: |
        echo "ACTION_VERSION=${GITHUB_ACTION_PATH##*/}" >> $GITHUB_ENV
        echo "REPO_NAME=$(echo ${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/})" >> $GITHUB_ENV
        echo ${{ env.ACTION_VERSION }}
        echo ${{ env.REPO_NAME }}


    - name: Dotnet Setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x


    - name: Checkout docfx-pages
      uses: actions/checkout@v3
      with:
        repository: 'sator-imaging/docfx-pages'
        sparse-checkout: '.docfx'
        sparse-checkout-cone-mode: true
        path: 'tmp-docfx-pages'
        ref: ${{ env.ACTION_VERSION }}

    - name: Combine repository
      shell: bash
      run: |
        cp -n -r 'tmp-docfx-pages/.docfx' '.'
        rm -rf    tmp-docfx-pages

    - name: Rename README and LICENSE
      shell: bash
      run: |
        if test -f README; then
          if ! test -f README.md; then
            mv README README.md
          fi
        fi
        if test -f LICENSE; then
          if ! test -f LICENSE.md; then
            mv LICENSE LICENSE.md
          fi
        fi

    - name: Fix document title if required
      shell: bash
      run: |
        if test -f README.md; then
          if ! [ "$(head -1 README.md | sed -n '/^# /p;q')" ]; then
            echo "# $(cat README.md)" > README.md
          fi
        fi
        if test -f LICENSE.md; then
          if ! [ "$(head -1 LICENSE.md | sed -n '/^# /p;q')" ]; then
            echo "# $(cat LICENSE.md)" > LICENSE.md
          fi
        fi

    - name: Generate README.md and index.md
      shell: bash
      run: |
        if ! test -f 'README.md'; then
          echo "# $(echo ${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/})" > README.md
          echo "${{ github.server_url }}/${{ github.repository }}" >> README.md
        fi
        if ! test -f 'index.md'; then
          mv 'README.md' 'index.md'
        fi

    - name: Generate toc.yml
      shell: bash
      run: |
        cd .docfx
          if ! test -f 'toc.yml'; then
            echo '- name: Introduction' >> 'toc.yml'
            echo '  href: index.html' >> 'toc.yml'
            echo '- name: API' >> 'toc.yml'
            echo '  href: api/toc.yml' >> 'toc.yml'
            echo '  expanded: true' >> 'toc.yml'
            if test -f '../LICENSE.md'; then
              echo '- name: License' >> 'toc.yml'
              echo '  href: LICENSE.html' >> 'toc.yml'
            fi
          fi
        cd ..

    - name: Generate docfx config
      shell: bash
      run: |
        cd .docfx

          printf "$(cat docfx.json)" \
            "${{ inputs.class_members }}" \
            "${{ inputs.app_name }}" \
            "${{ inputs.site_title }}" \
            "${{ inputs.site_footer }}" \
            "${{ inputs.site_logo }}" \
            "${{ inputs.site_favicon }}" \
            "${{ inputs.google_analytics }}" \
            "https://${{ github.repository_owner }}.github.io/${{ env.REPO_NAME }}/" \
            > docfx.json

          echo "${{ inputs.main_js }}"  >> template/public/main.js
          echo "${{ inputs.main_css }}" >> template/public/main.css

        cd ..


    # DEBUG
    - name: DEBUG
      shell: bash
      run: |
        cat .docfx/docfx.json


    - name: Run DocFX
      shell: bash
      run: |
        dotnet tool update -g docfx
        pushd .docfx
          docfx docfx.json
        popd


    - name: TOC expansion
      shell: bash
      run: |
        pushd .docfx/_site
          if test -f toc.json; then
            sed 's/\.html"\,"items"\:\[{"name"\:/\.html"\,"expanded"\:true\,"items"\:\[{"name"\:/g' -i toc.json
            cat toc.json
          fi
        popd


    - name: Setup Pages
      uses: actions/configure-pages@v3
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        # Upload entire repository
        path: '.docfx/_site'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
